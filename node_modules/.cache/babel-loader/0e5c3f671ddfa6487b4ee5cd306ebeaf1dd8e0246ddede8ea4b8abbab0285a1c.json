{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload; // payload is a special name for the extra data that is passed with the action\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\n\n// configureStore combines createStore and combineReducers, so we can have multiple reducers\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","initialAuthState","isAuthenticated","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggle","authSlice","login","logout","store","reducer","auth","counterActions","actions","authActions"],"sources":["/Users/zhangsu/Udemy/redux-counter-app/src/store/index.js"],"sourcesContent":["\nimport {createSlice, configureStore} from '@reduxjs/toolkit'\n\nconst initialCounterState = {\n    counter:0,\n    showCounter:true\n}\n\nconst initialAuthState = {\n    isAuthenticated:false\n};\n\n\nconst counterSlice = createSlice({\n    name:'counter',\n    initialState: initialCounterState,\n    reducers: {\n       increment(state) {\n        state.counter++;\n       },\n       decrement(state) {\n        state.counter--;\n       },\n       increase(state, action) {\n        state.counter = state.counter + action.payload; // payload is a special name for the extra data that is passed with the action\n       },\n       toggle(state) {\n        state.showCounter = !state.showCounter;\n       },\n    }\n})\n\nconst authSlice = createSlice({\n    name:'auth',\n    initialState: initialAuthState,\n    reducers: {\n        login(state) {\n            state.isAuthenticated = true;\n        },\n        logout(state) {\n            state.isAuthenticated = false;\n        }\n    \n    }\n\n})\n\n// configureStore combines createStore and combineReducers, so we can have multiple reducers\nconst store = configureStore({\n    reducer: {counter: counterSlice.reducer, auth: authSlice.reducer}\n});\n\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;\n\n"],"mappings":"AACA,SAAQA,WAAW,EAAEC,cAAc,QAAO,kBAAkB;AAE5D,MAAMC,mBAAmB,GAAG;EACxBC,OAAO,EAAC,CAAC;EACTC,WAAW,EAAC;AAChB,CAAC;AAED,MAAMC,gBAAgB,GAAG;EACrBC,eAAe,EAAC;AACpB,CAAC;AAGD,MAAMC,YAAY,GAAGP,WAAW,CAAC;EAC7BQ,IAAI,EAAC,SAAS;EACdC,YAAY,EAAEP,mBAAmB;EACjCQ,QAAQ,EAAE;IACPC,SAASA,CAACC,KAAK,EAAE;MAChBA,KAAK,CAACT,OAAO,EAAE;IAChB,CAAC;IACDU,SAASA,CAACD,KAAK,EAAE;MAChBA,KAAK,CAACT,OAAO,EAAE;IAChB,CAAC;IACDW,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACvBH,KAAK,CAACT,OAAO,GAAGS,KAAK,CAACT,OAAO,GAAGY,MAAM,CAACC,OAAO,CAAC,CAAC;IACjD,CAAC;IACDC,MAAMA,CAACL,KAAK,EAAE;MACbA,KAAK,CAACR,WAAW,GAAG,CAACQ,KAAK,CAACR,WAAW;IACvC;EACH;AACJ,CAAC,CAAC;AAEF,MAAMc,SAAS,GAAGlB,WAAW,CAAC;EAC1BQ,IAAI,EAAC,MAAM;EACXC,YAAY,EAAEJ,gBAAgB;EAC9BK,QAAQ,EAAE;IACNS,KAAKA,CAACP,KAAK,EAAE;MACTA,KAAK,CAACN,eAAe,GAAG,IAAI;IAChC,CAAC;IACDc,MAAMA,CAACR,KAAK,EAAE;MACVA,KAAK,CAACN,eAAe,GAAG,KAAK;IACjC;EAEJ;AAEJ,CAAC,CAAC;;AAEF;AACA,MAAMe,KAAK,GAAGpB,cAAc,CAAC;EACzBqB,OAAO,EAAE;IAACnB,OAAO,EAAEI,YAAY,CAACe,OAAO;IAAEC,IAAI,EAAEL,SAAS,CAACI;EAAO;AACpE,CAAC,CAAC;AAGF,OAAO,MAAME,cAAc,GAAGjB,YAAY,CAACkB,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAAO;AAC5C,eAAeJ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}